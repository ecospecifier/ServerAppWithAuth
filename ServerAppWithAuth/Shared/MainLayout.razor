@using Microsoft.JSInterop
@inject IJSRuntime jsr

@inherits LayoutComponentBase

<PageTitle>CMCAM</PageTitle>

<div class="page-container">

	<nav class="navbar navbar-expand-lg bg-body-secondary">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">
				<img src="/bootstrap-logo.svg" alt="Logo" width="30" height="24" class="d-inline-block align-text-top">
				Bootstrap
			</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>


			<div class=" collapse navbar-collapse justify-content-end" id="navbarSupportedContent">

				<ul class="navbar-nav mb-2 mb-lg-0 ">

					<LoginDisplay />

					<li class="nav-item">
						<a  class="nav-link bi @themePreferenceIcon" style="cursor:pointer;" @onclick=@ToggleTheme></a>
					</li>

					@* SOME OTHER EXAMPLE ITEMS
					<li class="nav-item">
					<a class="nav-link active" aria-current="page" href="#">Home</a>
					</li>
					<li class="nav-item dropdown">
					<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
					Dropdown
					</a>
					<ul class="dropdown-menu">
					<li><a class="dropdown-item" href="#">Action</a></li>
					<li><a class="dropdown-item" href="#">Another action</a></li>
					<li><hr class="dropdown-divider"></li>
					<li><a class="dropdown-item" href="#">Something else here</a></li>
					</ul>
					</li>
					<li class="nav-item">
					<a class="nav-link disabled">Disabled</a>
					</li>
					*@

				</ul>
			</div>

		</div>
	</nav>

	@Body

	<footer class="slim-footer  bg-body-tertiary border-top pl-3 text-muted">
		<div class="container">
			<p>&copy; @DateTime.Now.Year <a style="color: rebeccapurple; font-weight: 600;">Shuman</a> ❤ Blazor Server</p>
		</div>
	</footer>

</div>


@code {
	private string themePreferenceIcon = "bi-moon-stars";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		themePreferenceIcon = GetThemePreferenceIcon(await jsr.InvokeAsync<string>("getSavedThemePreference"));
		StateHasChanged();
	}

	private async Task ToggleTheme()
	{
		themePreferenceIcon = GetThemePreferenceIcon(await jsr.InvokeAsync<string>("toggleThemePreference"));
	}

	private string GetThemePreferenceIcon(string mode)
	{
		return (mode == "light") ? "bi-moon-stars" : "bi-brightness-alt-high";
	}
}


